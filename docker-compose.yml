version: "3.8"
services:
  app1:
    container_name: spring-boot-docker1
    image: nicolasgabrielli/mingeso-pep1:api
    ports:
      - "8091:8090"
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgresql
  app2:
    container_name: spring-boot-docker2
    image: nicolasgabrielli/mingeso-pep1:api
    ports:
      - "8092:8090"
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgresql
  app3:
    container_name: spring-boot-docker3
    image: nicolasgabrielli/mingeso-pep1:api
    ports:
      - "8093:8090"
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgresql
  db:
    image: postgres:15.1-alpine
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgresql
  front-end:
    container_name: front-end-docker
    image: nicolasgabrielli/mingeso-pep1:front-end
    ports:
      - "3000:3000"
    deploy:
      restart_policy:
        condition: on-failure
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2
      - app3
